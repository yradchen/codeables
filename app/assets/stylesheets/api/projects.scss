// Place all the styles related to the api/projects controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: http://sass-lang.com/

.outer-project-container {
  display: flex;
  flex-direction: column;
  list-style: none;
  height: 365px;
  width: 324px;
  margin-left: 28px;
  margin-bottom: 23px;
  border: 1px solid rgba(0, 0, 0, 0.10);
  box-shadow: 0 1px 0px rgba(0, 0, 0, 0.15);
  box-sizing: border-box;
}

.projects-ul {
  display: flex;
  flex-wrap: wrap;
  margin-top: 80px;
  justify-content: center;
}

.project-image {
  cursor: pointer;
  height: 270px;
  width: 324px
}

.inner-project-container {
  padding: 10px 13px;
  background: #fff;
  height: 50px;
}
.project-title, .project-owner {
  text-decoration: none;
  cursor: pointer;
  font-family: Helvetica, Arial, sans-serif;
}
.all-owner {
  display: flex;
  align-items: flex-end;
  margin-top: 7px;
}

.by-owner {
  font-size: 12px;
  margin-right: 4px;
  color: #999;
  font-family: Helvetica, Arial, sans-serif;
}
.project-title {
  color: #333;
  font-size: 14px;
  font-weight: bold;
  line-height: 20px;
}


.project-owner {
  color: #555;
  text-size-adjust: 100%;
  font-size: 13px;
}

.search-outer {
   background: #d4e1e7;
   padding-top: 35px;
   padding-bottom: 250px;
   min-height: 516px;
}
.search-inner {
  background-color: white;
}

.search-top-bar {
  display: flex;
  min-height: 115px;
  text-align: center;
  border: 1px solid rgba(0, 0, 0, .15);
  box-shadow: -1px 3px 3px rgba(0, 0, 0, 0.1);
  background: #f5f5f5;
  justify-content: center;
  align-items: center;
}

.code-big{
  font-size: 32px;
  font-family: 'Caveat Brush';
  letter-spacing: 2px;
 }

.searchbar-big {
  font-size: 18px;
  color: #757575;
  height: 25px;
  margin-left: 10px;
  background-color: #fff;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);
  padding: 4px 6px;
}
 // .lets-code {
 //   font-family: 'Caveat Brush';
 //   font-size: 16px;
 //   display: flex;
 //   flex-direction: row;
 // }
// const toggleDropdown = () => {
// 	$('#gear-dropdown').toggleClass('hidden');
// };
//
// // Add click listener to gear icon which invokes toggle function
// $(() => $('#gear-dropdown-btn').on('click', toggleDropdown));



//
// justify-content (horizontal setting)
// flex-start: Items align to the left side of the container.
// flex-end: Items align to the right side of the container.
// center: Items align at the center of the container.
// space-between: Items display with equal spacing between them.
// space-around: Items display with equal spacing around them.

// align-items - aligns items vertically and accepts the following values:
//
// flex-start: Items align to the top of the container.
// flex-end: Items align to the bottom of the container.
// center: Items align at the vertical center of the container.
// baseline: Items display at the baseline of the container.
// stretch: Items are stretched to fit the container.


// flex-direction -direction items are placed in the container, and accepts the following values:
//
// row: Items are placed the same as the text direction.
// row-reverse: Items are placed opposite to the text direction.
// column: Items are placed top to bottom.
// column-reverse: Items are placed bottom to top.

// align-self accepts same value as align-items

//
// flex-wrap property, which accepts the following values:
//
// nowrap: Every item is fit to a single line.
// wrap: Items wrap around to additional lines.
// wrap-reverse: Items wrap around to additional lines in reverse.

//
// The frogs are spread all over the pond, but the lilypads are bunched at the top. You can use align-content to set how multiple lines are spaced apart from each other. This property takes the following values:
//
// flex-start: Lines are packed at the top of the container.
// flex-end: Lines are packed at the bottom of the container.
// center: Lines are packed at the vertical center of the container.
// space-between: Lines display with equal spacing between them.
// space-around: Lines display with equal spacing around them.
// stretch: Lines are stretched to fit the container.
